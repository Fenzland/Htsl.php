@extend( layout )

@section( title )
	Home

@section( main )
	-article
		-h2
			What's the HTSL
		-p
			HTSL is short for HyperText Structured Language. Which is a language designed to take place of HTML, XML or other markup language. Which is simpler, cleaner, more agile, elegant, readable, content evident and easy to write than HTML.
		-h2
			And what's the Htsl.php
		-p
			Htsl.php is a php lib to parse the HTSL files to HTML files, to render by current browsers.
		-h2
			Now, just take a look!
		-code(htsl){>
			 HTML5
			 -html
			 	-head
			 		-charset(utf-8)
			 		-title
			 			Demo Page
			 		-css @style.css
			 		-js @init.js
			 	-body {lang=en;}
			 		!Login Page
			 		-header .float-clear
			 			-img @logo.png #logo .logo.float-left ^HTSL Demo _Demo
			 			-h1
			 				Demo
			 		-section [width:1024px;margin:auto;]
			 			-post @login.php >_blank
			 				-label
			 					Name:
			 				-text <name> _Please input your name {required;}
			 				-label
			 					Password
			 				-password <password> _Please input your password
			 				-submit <_action|login> %click{>alert('Sorry, this is just a demo.');return false;<}
			 					Login
		<}
		-p
			Above HTSL code will equal to the HTML code below.
		-code(html){>
			 <!DOCTYPE html>
			 <html>
			 	<head>
			 		<meta charset="utf-8" />
			 		<title>Demo Page</title>
			 		<link href="style.css" rel="stylesheet" type="text/css" />
			 		<script src="init.js" type="text/javascript"></script>
			 	</head>
			 	<body lang="en">
			 		<!-- Login Page -->
			 		<header class="float-clear">
			 			<img class="logo float-left" id="logo" src="logo.png" title="HTSL Demo" alt="Demo" />
			 			<h1>Demo</h1>
			 		</header>
			 		<section style="width:1024px;margin:auto;">
			 			<form action="login.php" method="post">
			 				<label>Name:</label>
			 				<input name="name" placeholder="Please input your name" required="required" type="text" />
			 				<label>Password</label>
			 				<input name="password" "Please input your password" type="password" />
			 				<button name="_action" onclick="alert('Sorry, this is just a demo.');return false;" value="login">Login</button>
			 			</form>
			 		</section>
			 	</body>
			 </html>
		<}
		-p
			Well there is a little different, the indent tabs and line-feeds in HTSL will not cause the shit white space between inline items. So in fact, that's equal to HTML as below.
		-code(html){>
			 <!DOCTYPE html><html><head><meta charset="utf-8" /><title>Demo Page</title><link href="style.css" rel="stylesheet" type="text/css" /><script src="init.js" type="text/javascript"></script></head><body lang="en"><!-- Login Page --><header class="float-clear"><img class="logo float-left" id="logo" src="logo.png" title="HTSL Demo" alt="Demo" /><h1>Demo</h1></header><section style="width:1024px;margin:auto;"><form action="login.php" method="post"><label>Name:</label><input name="name" placeholder="Please input your name" required="required" type="text" /><label>Password</label><input name="password" "Please input your password" type="password" /><button name="_action" onclick="alert('Sorry, this is just a demo.');return false;" value="login">Login</button></form></section></body></html>
		<}
		-p
			HTSL makes world clean.
		-h2
			HTSL vs. HAML & Jade
		-p
			There is an another brilliant language called HAML. HTSL is draw some lessons from HAML, and go a step further.
		-code(haml){>
			 %input{:type=>"number",:min=>"0",:step=>"0.01",:max=>"100",:name="price",:value="20.16",:placeholder="Price"}
			 %a{:link=>"javascript:alert('Hey')"}
		<}
		-code(htsl){>
			 -number(0|0.01|100) <price|20.16|Price>
			 -a @:alert('Hey')
		<}
